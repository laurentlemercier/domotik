---
  - hosts: all
    tasks:
      - locale_gen: name=fr_FR.UTF-8 state=present
      - apt: update_cache=yes cache_valid_time=3600
      - apt: upgrade=dist
      - apt: name=python-pip state=present
      - apt: name=git state=present
      - git: repo=https://github.com/sylvek/domotik.git dest=/home/pi/domotik version=master force=yes
        tags:
          - refresh
          - update

  - hosts: websocket
    tasks:
      - apt: name=apache2 state=present
      - apt: name=scons state=present
      - apt: name=apache2-prefork-dev state=present
      - service: name=apache2 state=started
      - git: repo=https://github.com/sylvek/apache-websocket.git dest=/home/pi/apache-websocket
      - git: repo=https://github.com/sylvek/mod_websocket_mosquitto.git dest=/home/pi/mod_websocket_mosquitto
      - shell: apxs2 -i -a -c mod_websocket.c
        args:
            chdir: /home/pi/apache-websocket
      - shell: apxs2 -i -a -c mod_websocket_draft76.c
        args:
            chdir: /home/pi/apache-websocket
      - shell: scons
        args:
            chdir: /home/pi/mod_websocket_mosquitto
      - shell: scons install
        args:
            chdir: /home/pi/mod_websocket_mosquitto
      - template: src=websocket/websocket.conf dest=/etc/apache2/mods-available/websocket.conf
      - apache2_module: name=websocket state=present
        notify:
          - restart apache2

    handlers:
      - name: restart apache2
        service: name=apache2 state=restarted

  - hosts: back
    tasks:
      - apt: name=mosquitto state=present
      - apt: name=mosquitto-clients state=present
      - apt: name=python-mosquitto state=present
      - apt: name=fswebcam state=present
      - pip: name=paho-mqtt
      - pip: name=pyserial

      # configure lirc
      - apt: name=lirc state=present
      - apt: name=liblircclient-dev state=present
      - lineinfile: dest=/etc/modules line="lirc_dev"
        notify: reboot
      - lineinfile: dest=/etc/modules line="lirc_rpi gpio_in_pin=18"
        notify: reboot
      - lineinfile: dest=/boot/config.txt line="dtoverlay=lirc-rpi"
        notify: reboot
      - copy: src=lirc/A1156 dest=/etc/lirc/lircd.conf owner=root group=root
        notify: restart lircd
      - copy: src=lirc/lircrc dest=/etc/lirc/lircrc owner=root group=root
        notify: restart lircd
      - copy: src=lirc/hardware.conf dest=/etc/lirc/hardware.conf owner=root group=root
        notify: restart lircd

      # configure udev
      - copy: src=usb/etc-udev-rules.d-99-usb-serial.rules dest=/etc/udev/rules.d/99-usb-serial.rules owner=root group=root
        notify: restart udev

      # domotik
      - shell: nohup /home/pi/domotik/stop-back.sh
        tags:
          - refresh
          - stop
      - shell: nohup /home/pi/domotik/start-back.sh
        tags:
          - refresh
          - start

    handlers:
      - name: reboot
        debug: msg="you should reboot after installation"
      - name: restart lircd
        service: name=lirc state=restarted
      - name: restart udev
        service: name=udev state=restarted

  - hosts: kiosk
    tasks:
      - apt: name=x11-xserver-utils state=present
      - apt: name=libwebkit-dev state=present
      - apt: name=xserver-xorg state=present
      - apt: name=xinit state=present
      - apt: name=matchbox-window-manager state=present
      - lineinfile: dest=/etc/X11/Xwrapper.config regexp=^allowed_users= line=allowed_users=anybody
      - git: repo=https://github.com/sylvek/kiosk-browser.git dest=/home/pi/kiosk-browser version=master force=yes
      - shell: make
        args:
            chdir: /home/pi/kiosk-browser

      # domotik
      - cron: name="reload webpage" minute="0" job="pidof browser | xargs kill -SIGHUP"
      - cron: name="restart webpage" minute="*/10" job="pidof browser || DISPLAY=:0 nohup /home/pi/kiosk-browser/browser http://192.168.0.5:3000/internal &"
        become: no
      - shell: nohup startx -- -nocursor &
        become: no
        environment:
          DISPLAY: :0
      - shell: xset -dpms
        become: no
        environment:
          DISPLAY: :0
      - shell: xset s noblank
        become: no
        environment:
          DISPLAY: :0
      - shell: pkill browser || /bin/true
        tags:
          - kiosk_stop
          - refresh
      - shell: nohup /home/pi/kiosk-browser/browser http://{{ hostvars[groups['front'][0]]['inventory_hostname'] }}:3000/internal &
        become: no
        environment:
          DISPLAY: :0
        tags:
          - kiosk_start
          - refresh

  - hosts: front
    tasks:
      - command: dpkg-query -W node
        register: node_check_deb
        failed_when: node_check_deb.rc > 1
        changed_when: node_check_deb.rc == 1
      - get_url: url=http://node-arm.herokuapp.com/node_latest_armhf.deb dest=/tmp/node_latest_armhf.deb
        when: node_check_deb.rc == 1
      - apt: deb=/tmp/node_latest_armhf.deb
        when: node_check_deb.rc == 1
      - command: dpkg-query -W mongodb
        register: mongodb_check_deb
        failed_when: mongodb_check_deb.rc > 1
        changed_when: mongodb_check_deb.rc == 1
      - get_url: url=https://github.com/tjanson/mongodb-armhf-deb/releases/download/v2.1.1-1/mongodb_2.1.1_armhf.deb dest=/tmp/mongodb_2.1.1_armhf.deb
        when: mongodb_check_deb.rc == 1
      - apt: deb=/tmp/mongodb_2.1.1_armhf.deb
        when: mongodb_check_deb.rc == 1
      - service: name=mongodb state=started enabled=yes
      - pip: name=paho-mqtt
      - pip: name=pymongo
      - npm: name=forever global=yes
      - npm: name=bower global=yes

      # domotik
      - shell: pkill mongodb.py || /bin/true
        tags:
          - refresh
          - stop
      - shell: nohup /home/pi/domotik/mosquitto_sub/mongodb.py {{ hostvars[groups['back'][0]]['inventory_hostname'] }} &
        tags:
          - refresh
          - start
      - shell: pkill syslog.py || /bin/true
        tags:
          - refresh
          - stop
      - shell: nohup /home/pi/domotik/mosquitto_sub/syslog.py {{ hostvars[groups['back'][0]]['inventory_hostname'] }} &
        tags:
          - refresh
          - start
      - shell: forever stop /home/pi/domotik/web/bin/www || /bin/true
        tags:
          - node_stop
          - refresh
          - stop
      - npm: path=/home/pi/domotik/web global=no
        tags:
          - refresh
      - bower: path=/home/pi/domotik/web
        tags:
          - refresh
      - shell: MONGO_DB='127.0.0.1:27017/domotik' forever start -s /home/pi/domotik/web/bin/www
        tags:
          - node_start
          - refresh
          - start
